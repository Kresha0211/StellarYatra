@* 
             @model IEnumerable<AstroSafar.Models.UnitAdmin>

<h2 class="mb-4">🚀 Units</h2>

<!-- 🔍 Search Input -->
<input type="text" id="searchInput" class="form-control mb-3" placeholder="Search units..." onkeyup="debounceFilterUnits()" />

<div class="accordion" id="unitAccordion">
    @foreach (var unit in Model)
    {
        var unitId = "unit" + unit.Id;
        <div class="accordion-item unit" data-title="@unit.Name.ToLower() @unit.Content.ToLower()">
            <h2 class="accordion-header" id="heading-@unitId">
                <button class="accordion-button collapsed unit-title" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@unitId" aria-expanded="false" aria-controls="collapse-@unitId">
                    📖 <span class="unit-name">@unit.Name</span>
                </button>
            </h2>
            <div id="collapse-@unitId" class="accordion-collapse collapse" aria-labelledby="heading-@unitId" data-bs-parent="#unitAccordion">
                <div class="accordion-body">
                    @if (!string.IsNullOrEmpty(unit.ImageURL))
                    {
                        <img src="@unit.ImageURL" alt="Unit Image" class="unit-image" />
                    }

                    @if (!string.IsNullOrEmpty(unit.Content))
                    {
                        var paragraphs = unit.Content.Split(new[] { "\n", "\r\n" }, StringSplitOptions.RemoveEmptyEntries);
                        <div class="unit-content">
                            @foreach (var paragraph in paragraphs)
                            {
                                if (!string.IsNullOrWhiteSpace(paragraph))
                                {
                                    <p class="unit-text">@Html.Raw(paragraph.Trim())</p>
                                }
                            }
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(unit.VideoUrl))
                    {
                        <div class="video-container">
                            <a href="@unit.VideoUrl" target="_blank" class="watch-video">📺 Watch Video</a>
                        </div>
                    }

                    <!-- Mark as Completed Radio Button -->
                    <div class="form-check mt-3">
                        <input class="form-check-input" type="radio" name="completeUnit-@unit.Id" id="completeUnit-@unit.Id" onclick="markUnitCompleted(@unit.Id)">
                        <label class="form-check-label" for="completeUnit-@unit.Id">✅ Mark as Done</label>
                    </div>

                    <p id="progress-@unit.Id" class="text-primary mt-2"></p>
                </div>
            </div>
        </div>
    }
</div>

<style>
    .accordion-button {
        font-size: 18px;
        font-weight: bold;
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 10px;
    }

        .accordion-button:hover {
            background-color: #e2e6ea;
        }

    .accordion-body {
        background-color: #ffffff;
        padding: 20px;
        border-radius: 10px;
    }

    .unit-image {
        max-width: 100%;
        height: auto;
        border-radius: 8px;
        margin-top: 10px;
        display: block;
    }

    .unit-content p {
        margin-bottom: 10px;
        line-height: 1.6;
    }

    .video-container {
        margin-top: 15px;
    }

    .watch-video {
        color: #007bff;
        text-decoration: none;
        font-weight: bold;
    }

        .watch-video:hover {
            text-decoration: underline;
        }

    /* 🔹 Highlight Matching Text */
    .highlight {
        background-color: yellow;
        font-weight: bold;
    }
</style>

<!-- 🔹 JavaScript for Search with Highlighting & Debounce -->
<script>
    let debounceTimer; // Debounce timer variable

    function debounceFilterUnits() {
        clearTimeout(debounceTimer);
        debounceTimer = setTimeout(filterUnits, 300); // Wait 300ms before executing
    }

    function filterUnits() {
        let input = document.getElementById("searchInput").value.toLowerCase();
        let units = document.querySelectorAll(".unit");

        units.forEach(unit => {
            let unitTitle = unit.getAttribute("data-title");
            let titleElement = unit.querySelector(".unit-name");
            let contentElements = unit.querySelectorAll(".unit-text");

            if (unitTitle.includes(input)) {
                unit.style.display = "block"; // Show matching units
                highlightText(titleElement, input);
                contentElements.forEach(content => highlightText(content, input));
            } else {
                unit.style.display = "none"; // Hide non-matching units
            }
        });
    }

    function highlightText(element, keyword) {
        if (!keyword) {
            element.innerHTML = element.textContent; // Reset if no search term
            return;
        }

        let regex = new RegExp(`(${keyword})`, "gi");
        element.innerHTML = element.textContent.replace(regex, '<span class="highlight">$1</span>');
    }

    function markUnitCompleted(unitId) {
        fetch(`/Client/CompleteUnit?unitId=${unitId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': document.querySelector('input[name="__RequestVerificationToken"]').value
            }
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById(`progress-${unitId}`).innerText = `Progress: ${data.progress}%`;
                }
            })
            .catch(error => console.error('Error:', error));
    }
</script>

<!-- Bootstrap JS (Required for Accordion) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
 *@





       @model IEnumerable<AstroSafar.Models.UnitAdmin>

<h2 class="mb-4 text-center fw-bold">🚀 Units</h2>

<!-- 🔍 Search Input -->

<div class="input-group mb-3">
    <span class="input-group-text">
        <i class="fas fa-search"></i> <!-- Font Awesome Search Icon -->
    </span>
    <input type="text" id="searchInput" class="form-control" placeholder="Search units..." onkeyup="debounceFilterUnits()" />
</div>

<div class="accordion" id="unitAccordion">
    @foreach (var unit in Model)
    {
        var unitId = "unit" + unit.Id;
        <div class="accordion-item unit" data-title="@unit.Name.ToLower() @unit.Content.ToLower()">
            <h2 class="accordion-header" id="heading-@unitId">
                <button class="accordion-button collapsed unit-title" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@unitId" aria-expanded="false" aria-controls="collapse-@unitId">
                    📖 <span class="unit-name">@unit.Name</span>
                </button>
            </h2>
            <div id="collapse-@unitId" class="accordion-collapse collapse" aria-labelledby="heading-@unitId" data-bs-parent="#unitAccordion">
                <div class="accordion-body">
                    @if (!string.IsNullOrEmpty(unit.ImageURL))
                    {
                        <img src="@unit.ImageURL" alt="Unit Image" class="unit-image" />
                    }

                    @if (!string.IsNullOrEmpty(unit.Content))
                    {
                        var paragraphs = unit.Content.Split(new[] { "\n", "\r\n" }, StringSplitOptions.RemoveEmptyEntries);
                        <div class="unit-content">
                            @foreach (var paragraph in paragraphs)
                            {
                                if (!string.IsNullOrWhiteSpace(paragraph))
                                {
                                    <p class="unit-text">@Html.Raw(paragraph.Trim())</p>
                                }
                            }
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(unit.VideoUrl))
                    {
                        <div class="video-container">
                            <a href="@unit.VideoUrl" target="_blank" class="watch-video">📺 Watch Video</a>
                        </div>
                    }

                    <!-- Mark as Completed Radio Button -->
                    <div class="form-check mt-3">
                        <input class="form-check-input" type="radio" name="completeUnit-@unit.Id" id="completeUnit-@unit.Id" onclick="markUnitCompleted(@unit.Id)">
                        <label class="form-check-label" for="completeUnit-@unit.Id">✅ Mark as Done</label>
                    </div>

                    <p id="progress-@unit.Id" class="text-primary mt-2"></p>
                </div>
            </div>
        </div>
    }
</div>

<style>
    :root {
        --space-light: #f0f5ff;
        --deep-sky: #e6f0ff;
        --nebula-purple-light: #c5b3dd;
        --cosmic-blue-light: #6699cc;
        --star-color: #4d94ff;
        --meteor-orange-light: #ff9966;
        --moon-silver: #e6e6e6;
        --planet-ring-light: rgba(102, 153, 204, 0.15);
        --heading-color: #007bff;
    }

    h2 {
        text-align: center;
        color: #007bff;
    }

    body {
        background: linear-gradient(135deg, var(--space-light) 0%, var(--deep-sky) 100%);
        color: #333;
        font-family: 'Exo 2', sans-serif;
        min-height: 100vh;
        position: relative;
        overflow-x: hidden;
    }

    .accordion-button {
        font-size: 18px;
        font-weight: bold;
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 10px;
    }

        .accordion-button:hover {
            background-color: #e2e6ea;
        }

    .accordion-body {
        background-color: #ffffff;
        padding: 20px;
        border-radius: 10px;
    }

    .unit-image {
        max-width: 100%;
        height: auto;
        border-radius: 8px;
        margin-top: 10px;
        display: block;
    }

    .unit-content p {
        margin-bottom: 10px;
        line-height: 1.6;
    }

    .video-container {
        margin-top: 15px;
    }

    .watch-video {
        color: #007bff;
        text-decoration: none;
        font-weight: bold;
    }

        .watch-video:hover {
            text-decoration: underline;
        }

    /* 🔹 Highlight Matching Text */
    .highlight {
        background-color: yellow;
        font-weight: bold;
    }
</style>

<!-- 🔹 JavaScript for Search with Highlighting & Debounce -->
<script>
    let debounceTimer; // Debounce timer variable

    function debounceFilterUnits() {
        clearTimeout(debounceTimer);
        debounceTimer = setTimeout(filterUnits, 300); // Wait 300ms before executing
    }

    function filterUnits() {
        let input = document.getElementById("searchInput").value.toLowerCase();
        let units = document.querySelectorAll(".unit");

        units.forEach(unit => {
            let unitTitle = unit.getAttribute("data-title");
            let titleElement = unit.querySelector(".unit-name");
            let contentElements = unit.querySelectorAll(".unit-text");

            if (unitTitle.includes(input)) {
                unit.style.display = "block"; // Show matching units
                highlightText(titleElement, input);
                contentElements.forEach(content => highlightText(content, input));
            } else {
                unit.style.display = "none"; // Hide non-matching units
            }
        });
    }

    function highlightText(element, keyword) {
        if (!keyword) {
            element.innerHTML = element.textContent; // Reset if no search term
            return;
        }

        let regex = new RegExp(`(${keyword})`, "gi");
        element.innerHTML = element.textContent.replace(regex, '<span class="highlight">$1</span>');
    }

    function markUnitCompleted(unitId) {
        fetch(`/Course/CompleteUnit?unitId=${unitId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' }
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById(`progress-${unitId}`).innerText = `Progress: ${data.progress}%`;
                    alert("Unit marked as completed!");
                } else {
                    alert("Error marking unit as completed.");
                }
            })
            .catch(error => console.error('Error:', error));
    }
</script>

<!-- Bootstrap JS (Required for Accordion) -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
