@model AstroSafar.Models.Registration

@{
    ViewBag.Title = "Registration";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">

    <style>
        
        body {
            background: url('https://source.unsplash.com/1600x900/?galaxy,universe') no-repeat center center fixed;
            background-size: cover;
            background-color: lavender;
            font-family: 'Poppins', sans-serif;
        }
        .registration-container {
            max-width: 500px; 
            margin: 50px auto; 
            padding: 20px; 
            border: 1px solid #ccc; 
            border-radius: 5px; 
            background-color: white;
 */        }
    </style>
</head>
<body>
    <div class="registration-container">
        <h2 class="text-center">Registration</h2>
        @using (Html.BeginForm())
        {
            <div class="form-group">
                @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.Firstname, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Firstname)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.Lastname, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Lastname)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email)
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "form-label" })
                @Html.TextBoxFor(model => model.Phone, new { @class = "form-control", type = "tel", pattern = "[0-9]{10}", maxlength = "10", title = "Phone number must be exactly 10 digits" })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
           
            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "form-label" })
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", id = "passwordInput" })
                <span class="toggle-password" id="togglePassword">&#128065;</span> <!-- Eye icon -->
                @Html.ValidationMessageFor(model => model.Password)
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-label" })
                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", id = "confirmPasswordInput" })
                <span class="toggle-password" id="toggleConfirmPassword">&#128065;</span> <!-- Eye icon -->
                @Html.ValidationMessageFor(model => model.ConfirmPassword)
            </div>

            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label"></label>
                <input asp-for="DateOfBirth" class="form-control" />
                <span asp-validation-for="DateOfBirth" class="text-danger"></span>
            </div>

            <button type="submit" class="btn btn-primary w-100">Register</button> <!-- Full-width button -->
            <div>
                <a asp-action="Login" asp-controller="Account">Already Register? Login</a>
            </div>

        }   
    </div>
   

  
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
      
        // Toggle password visibility
        const togglePassword = document.getElementById('togglePassword');
        const passwordInput = document.getElementById('passwordInput');

        togglePassword.addEventListener('click', function () {
            // Toggle the type attribute
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            // Toggle the eye icon
            this.textContent = type === 'password' ? '\u{1F441}' : '\u{1F440}'; // Change icon based on visibility
        });

        // Toggle password visibility for Confirm Password field
        const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');
        const confirmPasswordInput = document.getElementById('confirmPasswordInput');

        toggleConfirmPassword.addEventListener('click', function () {
            // Toggle the type attribute
            const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            confirmPasswordInput.setAttribute('type', type);
            // Toggle the eye icon
            this.textContent = type === 'password' ? '\u{1F441}' : '\u{1F440}'; // Change icon based on visibility
        });
        document.addEventListener("DOMContentLoaded", function () {
            const dobInput = document.getElementById("DateOfBirth");
            const today = new Date().toISOString().split("T")[0]; // Get today's date in YYYY-MM-DD format
            dobInput.setAttribute("max", today); 
      

    </script>
</body>
</html>
 

