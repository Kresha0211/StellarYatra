@model AstroSafar.Models.CheckoutViewModel
@{
    ViewData["Title"] = "Checkout";
}

<!-- Bootstrap Icons and Font Awesome CDN -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

<style>
    :root {
        --space-bg: #f2f7ff;
        --card-bg: #ffffff;
        --primary-blue: #3a7bd5;
        --cosmic-green: #28a745;
        --danger-red: #dc3545;
        --glow-effect: rgba(58, 123, 213, 0.15);
        --card-radius: 16px;
        --text-dark: #222;
        --text-light: #777;
    }

    body {
        background: var(--space-bg);
        font-family: 'Poppins', sans-serif;
        color: var(--text-dark);
    }

    .checkout-card {
        border-radius: var(--card-radius);
        box-shadow: 0 4px 20px rgba(0,0,0,0.08);
        border: none;
        transition: all 0.3s ease;
    }

        .checkout-card:hover {
            box-shadow: 0 8px 30px rgba(0,0,0,0.12);
        }

    .form-control, .form-select {
        border-radius: 8px;
        padding: 10px 15px;
        border: 1px solid #ced4da;
    }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary-blue);
            box-shadow: 0 0 0 0.25rem rgba(58, 123, 213, 0.25);
        }

    .btn-success {
        background-color: var(--cosmic-green) !important;
        border: none;
        font-weight: 600;
        padding: 12px 24px;
        border-radius: 8px;
        transition: all 0.3s ease;
    }

        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(40, 167, 69, 0.3);
        }

    .list-group-item {
        border-radius: 8px !important;
        margin-bottom: 8px;
        border: 1px solid rgba(0,0,0,0.08);
    }

    .secure-checkout {
        font-size: 0.85rem;
        color: var(--text-light);
    }

    .payment-icon {
        width: 30px;
        height: 20px;
        object-fit: contain;
        margin-right: 8px;
    }

    .validation-error {
        font-size: 0.8rem;
        margin-top: 4px;
    }

    h2 {
        color: var(--primary-blue);
        font-weight: 700;
        margin-bottom: 1.5rem;
    }

    h5 {
        color: var(--primary-blue);
        font-weight: 600;
        margin-bottom: 1rem;
    }

    .total-row {
        font-weight: 600;
        background-color: #f8f9fa;
    }
</style>

<div class="container my-5">
    <h2 class="mb-4"><i class="bi bi-cart-check me-2"></i>Checkout</h2>
    <form asp-action="Checkout" method="post" id="checkoutForm">
        @Html.AntiForgeryToken()

        <input type="hidden" name="PaymentId" id="PaymentId" /> <!-- Razorpay Payment ID -->

        <div class="row">
            <!-- Left: Shipping Details -->
            <div class="col-lg-7">
                <div class="checkout-card card mb-4 p-4">
                    <h5><i class="bi bi-truck me-2"></i>Shipping Information</h5>

                    <div class="mb-3">
                        <label asp-for="FullName" class="form-label">Full Name</label>
                        <input asp-for="FullName" class="form-control" pattern="[A-Za-z ]+" title="Please enter only letters" />
                        <span asp-validation-for="FullName" class="text-danger validation-error"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="PhoneNumber" class="form-label">Phone Number</label>
                        <input asp-for="PhoneNumber" class="form-control" pattern="[0-9]{10}" title="Please enter a 10-digit phone number" />
                        <span asp-validation-for="PhoneNumber" class="text-danger validation-error"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="AddressLine1" class="form-label">Address Line 1</label>
                        <input asp-for="AddressLine1" class="form-control" />
                        <span asp-validation-for="AddressLine1" class="text-danger validation-error"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="AddressLine2" class="form-label">
                            Address Line 2 <small class="text-muted"></small>
                        </label>
                        <input asp-for="AddressLine2" class="form-control" />
                    </div>

                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="City" class="form-label">City</label>
                            <input asp-for="City" class="form-control" />
                            <span asp-validation-for="City" class="text-danger validation-error"></span>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="State" class="form-label">State</label>
                            <input asp-for="State" class="form-control" />
                            <span asp-validation-for="State" class="text-danger validation-error"></span>
                        </div>
                    </div>

                    <div class="mb-4">
                        <label asp-for="ZipCode" class="form-label">ZIP / Postal Code</label>
                        <input asp-for="ZipCode" class="form-control" pattern="[0-9]+" title="Please enter only numbers" />
                        <span asp-validation-for="ZipCode" class="text-danger validation-error"></span>
                    </div>
                </div>
            </div>

            <!-- Right: Order Summary -->
            <div class="col-lg-5">
                <div class="checkout-card card mb-4 p-4 bg-light">
                    <h5><i class="bi bi-receipt me-2"></i>Order Summary</h5>

                    <ul class="list-group mb-3">
                        @foreach (var item in Model.CartItems)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-start">
                                <div>
                                    <h6 class="mb-1">@item.ProductName</h6>
                                    <small class="text-muted">Qty: @item.Quantity × ₹@item.UnitPrice.ToString("0.00")</small>
                                </div>
                                <span class="fw-bold">₹@item.TotalPrice.ToString("0.00")</span>
                            </li>
                        }

                        @{
                            var subtotal = Model.CartItems.Sum(i => i.UnitPrice * i.Quantity);
                            var gst = subtotal * 0.02M;
                        }
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Subtotal</span>
                            <span>₹@subtotal.ToString("0.00")</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between">
                            <span>GST (2%)</span>
                            <span>₹@gst.ToString("0.00")</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between">
                            <span>Delivery Charges</span>
                            <span class="text-success">Free</span>
                        </li>
                        <li class="list-group-item d-flex justify-content-between fw-bold total-row">
                            <span>Total</span>
                            <span>₹@Model.TotalAmount.ToString("0.00")</span>
                        </li>
                    </ul>

                    <div class="mb-3">
                        <label asp-for="PaymentMethod" class="form-label">Payment Method</label>
                        <select asp-for="PaymentMethod" class="form-select" id="PaymentMethod" required>
                            <option value="">— Select —</option>
                            <option value="OnlinePayment">
                                <i class="bi bi-credit-card me-2"></i>Online Payment
                            </option>
                            <option value="CashOnDelivery">
                                <i class="bi bi-cash-coin me-2"></i>Cash on Delivery
                            </option>
                        </select>
                        <span asp-validation-for="PaymentMethod" class="text-danger validation-error"></span>
                    </div>

                    <div class="d-grid">
                        <button type="submit" class="btn btn-success btn-lg">
                            <i class="bi bi-lock-fill me-2"></i>Place Order
                        </button>
                    </div>

                    <div class="secure-checkout text-center mt-3">
                        <img src="https://img.icons8.com/color/48/lock--v1.png" width="20" class="me-1" />
                        Secure checkout powered by AstroSafar
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>

        document.getElementById("checkoutForm").addEventListener("submit", function (e) {
            const paymentMethod = document.getElementById("PaymentMethod").value;

            if (paymentMethod === "OnlinePayment") {
                e.preventDefault(); // Stop form submission

                // Get form data for shipping details
                const formData = new FormData(this);
                const totalAmount = @Model.TotalAmount;

                fetch('/Razorpay/CreateOrder', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ totalAmount: totalAmount })
                })
                    .then(res => res.json())
                    .then(data => {
                        const options = {
                            "key": "rzp_test_4UCmUidOmvrAtJ",
                            "amount": totalAmount * 100,
                            "currency": "INR",
                            "order_id": data.orderId,
                            "name": "AstroSafar",
                            "description": "Book Purchase",
                            "image": "https://example.com/your_logo.png",
                            "handler": function (response) {
                                // Simple approach - first submit the form with the payment ID
                                document.getElementById("PaymentId").value = response.razorpay_payment_id;

                                // Submit the form directly instead of using fetch
                                document.getElementById("checkoutForm").submit();

                                // Add a forced redirect with timeout as backup
                                setTimeout(function () {
                                    window.location.href = '/Store/OrderSuccess?paymentId=' + response.razorpay_payment_id;
                                }, 1500);
                            },
                            "prefill": {
                                "name": document.getElementById("FullName").value,
                                "contact": document.getElementById("PhoneNumber").value
                            },
                            "theme": {
                                "color": "#3a7bd5"
                            }
                        };
                        const rzp = new Razorpay(options);
                        rzp.open();
                    })
                    .catch(error => {
                        alert('Payment initialization failed: ' + error.message);
                    });
            }
        });

        // Client-side validation for name (letters only)
        document.getElementById("FullName").addEventListener("input", function (e) {
            this.value = this.value.replace(/[^A-Za-z ]/g, '');
        });
        document.getElementById("City").addEventListener("input", function (e) {
            this.value = this.value.replace(/[^A-Za-z ]/g, '');
        });
        document.getElementById("State").addEventListener("input", function (e) {
            this.value = this.value.replace(/[^A-Za-z ]/g, '');
        });

        // Client-side validation for phone (10 digits only)
        document.getElementById("PhoneNumber").addEventListener("input", function (e) {
            this.value = this.value.replace(/\D/g, '').substring(0, 10);
        });

        // Client-side validation for zip code (numbers only)
        document.getElementById("ZipCode").addEventListener("input", function (e) {
            this.value = this.value.replace(/\D/g, '');
        });
    </script>
}