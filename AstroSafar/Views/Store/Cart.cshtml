@*


@model List<AstroSafar.Models.CartItem>
@{
    ViewData["Title"] = "Your Cart";
    var total = Model.Sum(item => item.Book.Price * item.Quantity);
}

<h2 class="text-center mb-4">🛒 Your Shopping Cart</h2>

<div id="cart-content">
    @if (!Model.Any())
    {
        <div class="alert alert-info text-center empty-msg">
            Your cart is empty. <a href="@Url.Action("Explore", "Store")">Browse books</a> to add some!
        </div>
    }
    else
    {
        <div class="container">
            @foreach (var item in Model)
            {
                <div class="card mb-3 shadow-sm cart-item" data-id="@item.CartItemId">
                    <div class="row g-0 align-items-center">
                        <div class="col-md-2">
                            <img src="@item.Book.ImageUrl" class="img-fluid rounded-start" alt="@item.Book.Title">
                        </div>
                        <div class="col-md-7">
                            <div class="card-body">
                                <h5 class="card-title">@item.Book.Title</h5>
                                <p class="card-text"><small class="text-muted">Author: @item.Book.Author</small></p>
                                <p class="card-text">Price: ₹@item.Book.Price</p>
                                <p class="card-text">Subtotal: ₹<span class="subtotal" data-price="@item.Book.Price">@((item.Book.Price * item.Quantity).ToString("0.00"))</span></p>
                            </div>
                        </div>

                        <div class="col-md-3 text-center">
                            <div class="quantity-control" data-id="@item.CartItemId">
                                <button class="btn btn-outline-secondary btn-sm decrease">-</button>
                                <span class="mx-2 quantity">@item.Quantity</span>
                                <button class="btn btn-outline-secondary btn-sm increase">+</button>
                            </div>

                            <button class="btn btn-danger btn-sm mt-2 remove-item" data-id="@item.CartItemId">Remove</button>
                        </div>
                    </div>
                </div>
            }

            <div class="text-end mt-4">
                <h4>Total: ₹<span id="total">@total.ToString("0.00")</span></h4>
                <a href="@Url.Action("Checkout", "Store")" class="btn btn-success">Proceed to Checkout</a>
            </div>
        </div>
    }
</div>

<style>
    .card-title {
        font-size: 1.2rem;
        font-weight: 600;
    }
</style>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            function recalculateTotal() {
                let total = 0;
                $('.subtotal').each(function () {
                    total += parseFloat($(this).text());
                });
                $('#total').text(total.toFixed(2));
            }

            $('.quantity-control button').click(function () {
                const button = $(this);
                const container = button.closest('.quantity-control');
                const cartItemId = container.data('id');
                const action = button.hasClass('increase') ? 'increase' : 'decrease';

                $.post('/Store/UpdateQuantity', {
                    id: cartItemId,
                    action: action
                }, function (updatedQuantity) {
                    if (updatedQuantity <= 0) {
                        container.closest('.cart-item').remove();
                    } else {
                        container.find('.quantity').text(updatedQuantity);
                        const price = parseFloat(container.closest('.row').find('.subtotal').data('price'));
                        container.closest('.row').find('.subtotal').text((updatedQuantity * price).toFixed(2));
                    }

                    recalculateTotal();
                    checkEmptyCart();
                });
            });

            $('.remove-item').click(function () {
                const button = $(this);
                const cartItemId = button.data('id');

                $.post('/Store/RemoveFromCart', {
                    id: cartItemId
                }, function () {
                    button.closest('.cart-item').remove();
                    recalculateTotal();
                    checkEmptyCart();
                });
            });

            function checkEmptyCart() {
                if ($('.cart-item').length === 0) {
                    $('#cart-content').html('<div class="alert alert-info text-center empty-msg">Your cart is empty. <a href="/Store/Explore">Browse books</a> to add some!</div>');
                }
            }
        });
    </script>
}


 *@

                    @model List<AstroSafar.Models.CartItem>
@{
    ViewData["Title"] = "Your Cart";
    var total = Model.Sum(item => item.Book.Price * item.Quantity);
}

<!-- Bootstrap Icons and Font Awesome CDN -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />

<style>
    :root {
        --space-bg: #f2f7ff;
        --card-bg: #ffffff;
        --primary-blue: #3a7bd5;
        --cosmic-green: #28a745;
        --danger-red: #dc3545;
        --glow-effect: rgba(58, 123, 213, 0.15);
        --card-radius: 16px;
        --text-dark: #222;
        --text-light: #777;
    }

    body {
        background: var(--space-bg);
        font-family: 'Poppins', sans-serif;
        color: var(--text-dark);
    }

    .cart-item {
        transition: all 0.35s ease-in-out;
        will-change: transform;
        margin-bottom: 1.5rem;
        border-radius: var(--card-radius);
        overflow: hidden;
    }

        .cart-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px var(--glow-effect);
        }

    .card-title {
        font-size: 1.2rem;
        font-weight: 600;
        color: var(--primary-blue);
    }

    .quantity-control {
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .quantity-control button {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 0;
        }

    .quantity {
        font-weight: 600;
        min-width: 30px;
        text-align: center;
    }

    .btn-success {
        background-color: var(--cosmic-green) !important;
        border: none;
        font-weight: 600;
        padding: 0.5rem 1.5rem;
        border-radius: 8px;
    }

    .btn-danger {
        background-color: var(--danger-red) !important;
        border: none;
        font-weight: 600;
        padding: 0.5rem 1.5rem;
        border-radius: 8px;
    }

    .empty-msg {
        font-size: 1.1rem;
        padding: 2rem;
        border-radius: var(--card-radius);
        background: var(--card-bg);
        box-shadow: 0 4px 12px rgba(0,0,0,0.05);
    }

        .empty-msg a {
            color: var(--primary-blue);
            font-weight: 600;
            text-decoration: none;
        }

            .empty-msg a:hover {
                text-decoration: underline;
            }

    .total-amount {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--primary-blue);
    }

    h2 {
        color: #007bff;
        text-align: center;
        font-weight: bold;
        margin-bottom: 20px;
    }

    .book-image-container {
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 1rem;
        background: #f8f9fa;
    }

    .book-image {
        max-height: 180px;
        width: auto;
        max-width: 100%;
        object-fit: contain;
        border-radius: 8px;
    }

    @@media (max-width: 768px) {
        .book-image-container {
            padding: 1rem 0;
        }

        .book-image {
            max-height: 150px;
        }
    }
</style>

<h2 class="text-center mb-4 fw-bold">🛒 Your Shopping Cart</h2>

<div id="cart-content">
    @if (!Model.Any())
    {
        <div class="alert alert-info text-center empty-msg">
            <i class="bi bi-cart-x-fill me-2"></i>Your cart is empty. <a href="@Url.Action("Explore", "Store")">Browse books</a> to add some!
        </div>
    }
    else
    {
        <div class="container">
            @foreach (var item in Model)
            {
                <div class="card mb-3 shadow-lg border-0 cart-item" data-id="@item.CartItemId">
                    <div class="row g-0 align-items-center">
                        <div class="col-md-2 book-image-container">
                            <img src="@item.Book.ImageUrl" class="book-image" alt="@item.Book.Title">
                        </div>
                        <div class="col-md-7">
                            <div class="card-body">
                                <h5 class="card-title">@item.Book.Title</h5>
                                <p class="card-text text-muted"><i class="bi bi-person-fill me-2"></i>@item.Book.Author</p>
                                <p class="card-text"><i class="bi bi-currency-rupee me-2"></i>@item.Book.Price.ToString("0.00")</p>
                                <p class="card-text fw-bold">Subtotal: <i class="bi bi-currency-rupee"></i><span class="subtotal" data-price="@item.Book.Price">@((item.Book.Price * item.Quantity).ToString("0.00"))</span></p>
                            </div>
                        </div>

                        <div class="col-md-3 text-center">
                            <div class="quantity-control mb-3" data-id="@item.CartItemId">
                                <button class="btn btn-outline-secondary decrease"><i class="bi bi-dash-lg"></i></button>
                                <span class="mx-2 quantity">@item.Quantity</span>
                                <button class="btn btn-outline-secondary increase"><i class="bi bi-plus-lg"></i></button>
                            </div>

                            <button class="btn btn-danger remove-item" data-id="@item.CartItemId">
                                <i class="bi bi-trash-fill me-1"></i>Remove
                            </button>
                        </div>
                    </div>
                </div>
            }

            <div class="text-end mt-4 p-4 bg-white rounded-3 shadow-sm">
                <h4 class="total-amount">Total: <i class="bi bi-currency-rupee"></i><span id="total">@total.ToString("0.00")</span></h4>
                <a href="@Url.Action("Checkout", "Store")" class="btn btn-success btn-lg mt-3">
                    <i class="bi bi-credit-card-fill me-2"></i>Proceed to Checkout
                </a>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        $(document).ready(function () {
            function recalculateTotal() {
                let total = 0;
                $('.subtotal').each(function () {
                    total += parseFloat($(this).text());
                });
                $('#total').text(total.toFixed(2));
            }

            function showToast(message, icon = 'success') {
                const Toast = Swal.mixin({
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true,
                    didOpen: (toast) => {
                        toast.addEventListener('mouseenter', Swal.stopTimer)
                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                    }
                })

                Toast.fire({
                    icon: icon,
                    title: message
                })
            }

            $('.quantity-control button').click(function () {
                const button = $(this);
                const container = button.closest('.quantity-control');
                const cartItemId = container.data('id');
                const action = button.hasClass('increase') ? 'increase' : 'decrease';

                $.post('/Store/UpdateQuantity', {
                    id: cartItemId,
                    action: action
                }, function (updatedQuantity) {
                    if (updatedQuantity <= 0) {
                        container.closest('.cart-item').remove();
                        showToast('Item removed from cart', 'info');
                    } else {
                        container.find('.quantity').text(updatedQuantity);
                        const price = parseFloat(container.closest('.row').find('.subtotal').data('price'));
                        container.closest('.row').find('.subtotal').text((updatedQuantity * price).toFixed(2));
                        showToast('Quantity updated');
                    }

                    recalculateTotal();
                    checkEmptyCart();
                }).fail(function () {
                    showToast('Failed to update quantity', 'error');
                });
            });

            $('.remove-item').click(function () {
                const button = $(this);
                const cartItemId = button.data('id');

                $.post('/Store/RemoveFromCart', {
                    id: cartItemId
                }, function () {
                    button.closest('.cart-item').remove();
                    showToast('Item removed from cart', 'info');
                    recalculateTotal();
                    checkEmptyCart();
                }).fail(function () {
                    showToast('Failed to remove item', 'error');
                });
            });

            function checkEmptyCart() {
                if ($('.cart-item').length === 0) {
                    $('#cart-content').html(`
                                <div class="alert alert-info text-center empty-msg">
                                    <i class="bi bi-cart-x-fill me-2"></i>Your cart is empty. <a href="/Store/Explore">Browse books</a> to add some!
                                </div>
                            `);
                }
            }
        });
    </script>
}